// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/gsokolovskii/code/mafia_bot/internal/pparser/interfaces.go

// Package test_pparser is a generated GoMock package.
package test_pparser

import (
	io "io"
	http "net/http"
	reflect "reflect"

	pparser "github.com/GeorgeS1995/mafia_bot/internal/pparser"
	gomock "github.com/golang/mock/gomock"
)

// MockHttpClientInterface is a mock of HttpClientInterface interface.
type MockHttpClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHttpClientInterfaceMockRecorder
}

// MockHttpClientInterfaceMockRecorder is the mock recorder for MockHttpClientInterface.
type MockHttpClientInterfaceMockRecorder struct {
	mock *MockHttpClientInterface
}

// NewMockHttpClientInterface creates a new mock instance.
func NewMockHttpClientInterface(ctrl *gomock.Controller) *MockHttpClientInterface {
	mock := &MockHttpClientInterface{ctrl: ctrl}
	mock.recorder = &MockHttpClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpClientInterface) EXPECT() *MockHttpClientInterfaceMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockHttpClientInterface) Do(req *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockHttpClientInterfaceMockRecorder) Do(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockHttpClientInterface)(nil).Do), req)
}

// MockPolemicaRequestInterface is a mock of PolemicaRequestInterface interface.
type MockPolemicaRequestInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPolemicaRequestInterfaceMockRecorder
}

// MockPolemicaRequestInterfaceMockRecorder is the mock recorder for MockPolemicaRequestInterface.
type MockPolemicaRequestInterfaceMockRecorder struct {
	mock *MockPolemicaRequestInterface
}

// NewMockPolemicaRequestInterface creates a new mock instance.
func NewMockPolemicaRequestInterface(ctrl *gomock.Controller) *MockPolemicaRequestInterface {
	mock := &MockPolemicaRequestInterface{ctrl: ctrl}
	mock.recorder = &MockPolemicaRequestInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPolemicaRequestInterface) EXPECT() *MockPolemicaRequestInterfaceMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockPolemicaRequestInterface) Request(method, url string, body io.Reader, queryParams []*pparser.QueryParams) (*pparser.PolemicaResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", method, url, body, queryParams)
	ret0, _ := ret[0].(*pparser.PolemicaResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockPolemicaRequestInterfaceMockRecorder) Request(method, url, body, queryParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockPolemicaRequestInterface)(nil).Request), method, url, body, queryParams)
}

// MockMafiaBotDBInterface is a mock of MafiaBotDBInterface interface.
type MockMafiaBotDBInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMafiaBotDBInterfaceMockRecorder
}

// MockMafiaBotDBInterfaceMockRecorder is the mock recorder for MockMafiaBotDBInterface.
type MockMafiaBotDBInterfaceMockRecorder struct {
	mock *MockMafiaBotDBInterface
}

// NewMockMafiaBotDBInterface creates a new mock instance.
func NewMockMafiaBotDBInterface(ctrl *gomock.Controller) *MockMafiaBotDBInterface {
	mock := &MockMafiaBotDBInterface{ctrl: ctrl}
	mock.recorder = &MockMafiaBotDBInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMafiaBotDBInterface) EXPECT() *MockMafiaBotDBInterfaceMockRecorder {
	return m.recorder
}

// SaveMinimalGameStatistic mocks base method.
func (m *MockMafiaBotDBInterface) SaveMinimalGameStatistic(arg0 pparser.MinimalGameStatistic) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveMinimalGameStatistic", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveMinimalGameStatistic indicates an expected call of SaveMinimalGameStatistic.
func (mr *MockMafiaBotDBInterfaceMockRecorder) SaveMinimalGameStatistic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveMinimalGameStatistic", reflect.TypeOf((*MockMafiaBotDBInterface)(nil).SaveMinimalGameStatistic), arg0)
}
